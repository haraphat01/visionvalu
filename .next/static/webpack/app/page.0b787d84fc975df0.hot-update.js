/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/NzRhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz85N2EyIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./services/geminiService.ts":
/*!***********************************!*\
  !*** ./services/geminiService.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateDetailedReport: function() { return /* binding */ generateDetailedReport; },\n/* harmony export */   getPropertyValuation: function() { return /* binding */ getPropertyValuation; }\n/* harmony export */ });\n/* harmony import */ var _google_genai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/genai */ \"(app-pages-browser)/./node_modules/@google/genai/dist/web/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst API_KEY = process.env.NEXT_PUBLIC_GEMINI_API_KEY;\nif (!API_KEY) {\n    throw new Error(\"GEMINI_API_KEY environment variable not set.\");\n}\nconst ai = new _google_genai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenAI({\n    apiKey: API_KEY\n});\nconst valuationSchema = {\n    type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.OBJECT,\n    properties: {\n        estimatedValueRange: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.OBJECT,\n            properties: {\n                min: {\n                    type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.NUMBER,\n                    description: \"The minimum estimated value.\"\n                },\n                max: {\n                    type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.NUMBER,\n                    description: \"The maximum estimated value.\"\n                }\n            },\n            required: [\n                \"min\",\n                \"max\"\n            ]\n        },\n        confidenceScore: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.NUMBER,\n            description: \"A score from 0 to 100 representing the confidence in the valuation.\"\n        },\n        currency: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n            description: \"The currency of the valuation (e.g., USD, EUR, NGN). Default to USD if not obvious.\"\n        },\n        reasoning: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n            description: \"A detailed, paragraph-long explanation for the valuation, considering all visual cues and provided data.\"\n        },\n        detectedFeatures: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.ARRAY,\n            items: {\n                type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING\n            },\n            description: \"A list of key visual features detected (e.g., 'Modern kitchen with granite countertops', 'Large backyard with swimming pool', 'Hardwood flooring').\"\n        },\n        propertyType: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n            description: \"The type of property (e.g., 'Single-Family Home', 'Apartment', 'Duplex', 'Commercial Building').\"\n        },\n        propertyCondition: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n            description: \"The overall condition of the property (e.g., 'Excellent', 'Good', 'Fair', 'Needs Renovation').\"\n        },\n        suggestedUpgrades: {\n            type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.ARRAY,\n            description: \"A list of suggested upgrades or repairs to increase the property's value, including reasoning.\",\n            items: {\n                type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.OBJECT,\n                properties: {\n                    upgrade: {\n                        type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                        description: \"The specific upgrade or repair suggested (e.g., 'Modernize Kitchen Appliances').\"\n                    },\n                    reasoning: {\n                        type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                        description: \"Why this upgrade is recommended based on the images and market standards.\"\n                    },\n                    estimatedCost: {\n                        type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                        description: \"A rough estimate of the cost involved ('Low', 'Medium', 'High').\"\n                    },\n                    impactOnValue: {\n                        type: _google_genai__WEBPACK_IMPORTED_MODULE_0__.Type.STRING,\n                        description: \"The potential impact on the property's value ('Low', 'Medium', 'High').\"\n                    }\n                },\n                required: [\n                    \"upgrade\",\n                    \"reasoning\",\n                    \"estimatedCost\",\n                    \"impactOnValue\"\n                ]\n            }\n        }\n    },\n    required: [\n        \"estimatedValueRange\",\n        \"confidenceScore\",\n        \"currency\",\n        \"reasoning\",\n        \"detectedFeatures\",\n        \"propertyType\",\n        \"propertyCondition\",\n        \"suggestedUpgrades\"\n    ]\n};\nconst getPropertyValuation = async (images, details)=>{\n    const imageParts = images.map((base64Data)=>({\n            inlineData: {\n                mimeType: \"image/jpeg\",\n                data: base64Data\n            }\n        }));\n    const prompt = \"\\n    Analyze the following property images and details as an expert real estate appraiser. \\n    \\n    Property Details Provided:\\n    - Address/Location: \".concat(details.address || \"Not provided\", \"\\n    - Property Size: \").concat(details.propertySize ? \"\".concat(details.propertySize, \" sqft\") : \"Not provided\", \"\\n    - Bedrooms: \").concat(details.bedrooms || \"Not provided\", \"\\n    - Bathrooms: \").concat(details.bathrooms || \"Not provided\", \"\\n    - Additional Notes: \").concat(details.additionalNotes || \"None\", '\\n\\n    **Crucial Instructions:**\\n    1.  **If an address is provided:** Your most important task is to use the Google Search tool to find recent, comparable property sales data (\"comps\") for that specific address and neighborhood. \\n    2.  **Analyze and Compare:** Your valuation MUST be heavily based on comparing the provided property (images and details) against the real-world sales data of the comps you find. Note key similarities and differences (e.g., square footage, condition, amenities) in your reasoning.\\n    3.  **If no address is provided:** Base your valuation on the visual evidence and assume a standard, average market for a property of this type.\\n\\n    Based on this analysis, provide a comprehensive valuation. Also, identify key areas for improvement with suggested upgrades that could increase the property\\'s market value.\\n\\n    **Output Format:**\\n    Provide your complete response as a single, valid JSON object. Do not add any text, comments, or markdown formatting (like ```json) before or after the JSON object. The JSON object must strictly adhere to the following structure:\\n\\n    {\\n      \"estimatedValueRange\": { \"min\": number, \"max\": number },\\n      \"confidenceScore\": number (a score from 0 to 100),\\n      \"currency\": string (e.g., \"USD\"),\\n      \"reasoning\": string (a detailed, paragraph-long explanation),\\n      \"detectedFeatures\": string[] (a list of key visual features detected),\\n      \"propertyType\": string (e.g., \"Single-Family Home\", \"Apartment\"),\\n      \"propertyCondition\": string (e.g., \"Excellent\", \"Good\", \"Needs Renovation\"),\\n      \"suggestedUpgrades\": [\\n        {\\n          \"upgrade\": string,\\n          \"reasoning\": string,\\n          \"estimatedCost\": string (\"Low\", \"Medium\", or \"High\"),\\n          \"impactOnValue\": string (\"Low\", \"Medium\", or \"High\")\\n        }\\n      ]\\n    }\\n  ');\n    const useGrounding = details.address && details.address.trim() !== \"\";\n    try {\n        const config = useGrounding ? {\n            tools: [\n                {\n                    googleSearch: {}\n                }\n            ]\n        } : {\n            responseMimeType: \"application/json\",\n            responseSchema: valuationSchema\n        };\n        const response = await ai.models.generateContent({\n            model: \"gemini-2.5-flash\",\n            contents: {\n                parts: [\n                    ...imageParts,\n                    {\n                        text: prompt\n                    }\n                ]\n            },\n            config\n        });\n        const jsonText = response.text.trim();\n        // If grounding is used, the model might wrap the JSON in markdown backticks.\n        const cleanJsonText = jsonText.replace(/^```json\\s*|```$/g, \"\");\n        const valuationData = JSON.parse(cleanJsonText);\n        if (!valuationData.estimatedValueRange || !valuationData.reasoning) {\n            throw new Error(\"Incomplete valuation data received from AI.\");\n        }\n        if (useGrounding) {\n            var _response_candidates__groundingMetadata, _response_candidates_, _response_candidates;\n            const groundingChunks = (_response_candidates = response.candidates) === null || _response_candidates === void 0 ? void 0 : (_response_candidates_ = _response_candidates[0]) === null || _response_candidates_ === void 0 ? void 0 : (_response_candidates__groundingMetadata = _response_candidates_.groundingMetadata) === null || _response_candidates__groundingMetadata === void 0 ? void 0 : _response_candidates__groundingMetadata.groundingChunks;\n            const sources = (groundingChunks === null || groundingChunks === void 0 ? void 0 : groundingChunks.map((chunk)=>chunk.web).filter((web)=>!!web && !!web.uri && !!web.title)) || [];\n            return {\n                ...valuationData,\n                sources\n            };\n        }\n        return valuationData;\n    } catch (error) {\n        console.error(\"Error calling Gemini API:\", error);\n        if (error instanceof Error) {\n            throw new Error(\"Failed to get property valuation: \".concat(error.message));\n        }\n        throw new Error(\"An unknown error occurred during property valuation.\");\n    }\n};\nconst generateDetailedReport = async (valuation)=>{\n    var _valuation_propertyDetails, _valuation_propertyDetails1, _valuation_propertyDetails2, _valuation_propertyDetails3;\n    const prompt = '\\n    As a professional real estate analyst, synthesize the following structured data into a comprehensive, well-written, client-facing report. The tone should be professional, informative, and persuasive. The report should be formatted with clear headings using Markdown for structure (e.g., \"## Executive Summary\").\\n\\n    **Valuation Data:**\\n    - Property Type: '.concat(valuation.propertyType, \"\\n    - Address: \").concat(((_valuation_propertyDetails = valuation.propertyDetails) === null || _valuation_propertyDetails === void 0 ? void 0 : _valuation_propertyDetails.address) || \"Not specified\", \"\\n    - Property Size: \").concat(((_valuation_propertyDetails1 = valuation.propertyDetails) === null || _valuation_propertyDetails1 === void 0 ? void 0 : _valuation_propertyDetails1.propertySize) ? \"\".concat(valuation.propertyDetails.propertySize, \" sqft\") : \"Not specified\", \"\\n    - Bedrooms: \").concat(((_valuation_propertyDetails2 = valuation.propertyDetails) === null || _valuation_propertyDetails2 === void 0 ? void 0 : _valuation_propertyDetails2.bedrooms) || \"Not specified\", \"\\n    - Bathrooms: \").concat(((_valuation_propertyDetails3 = valuation.propertyDetails) === null || _valuation_propertyDetails3 === void 0 ? void 0 : _valuation_propertyDetails3.bathrooms) || \"Not specified\", \"\\n    - Estimated Value Range: \").concat(valuation.estimatedValueRange.min, \" - \").concat(valuation.estimatedValueRange.max, \" \").concat(valuation.currency, \"\\n    - AI's Reasoning for Valuation: \").concat(valuation.reasoning, \"\\n    - Detected Features: \").concat(valuation.detectedFeatures.join(\", \"), \"\\n    - Overall Condition: \").concat(valuation.propertyCondition, \"\\n    - Suggested Upgrades:\\n      \").concat(valuation.suggestedUpgrades.map((u)=>\"  - \".concat(u.upgrade, \": \").concat(u.reasoning, \" (Estimated Cost: \").concat(u.estimatedCost, \", Impact on Value: \").concat(u.impactOnValue, \")\")).join(\"\\n\"), \"\\n    - Web Sources Consulted:\\n      \").concat(valuation.sources && valuation.sources.length > 0 ? valuation.sources.map((s)=>\"  - [\".concat(s.title, \"](\").concat(s.uri, \")\")).join(\"\\n\") : \"None\", '\\n\\n    **Report Structure:**\\n    Create a report with the following sections:\\n    \\n    1.  **## Executive Summary:** Start with a brief, high-level overview of the property, its estimated value, and key findings.\\n    2.  **## Property Overview:** Describe the property in detail, using the detected features, property type, and condition. Make it sound appealing but realistic.\\n    3.  **## Market & Valuation Analysis:** Elaborate on the reasoning behind the valuation. If web sources were consulted, explain how the property compares to the local market based on those comps.\\n    4.  **## Path to Increased Value:** Frame the \"Suggested Upgrades\" as a strategic investment plan. For each upgrade, explain the potential return on investment in a compelling way.\\n    5.  **## Conclusion & Disclaimer:** End with a concluding paragraph summarizing the property\\'s potential. Include a brief disclaimer that this is an AI-generated estimate and a professional in-person appraisal is recommended for final decisions.\\n\\n    Generate only the text for the report.\\n  ');\n    try {\n        const response = await ai.models.generateContent({\n            model: \"gemini-2.5-flash\",\n            contents: prompt\n        });\n        return response.text;\n    } catch (error) {\n        console.error(\"Error generating detailed report:\", error);\n        if (error instanceof Error) {\n            throw new Error(\"Failed to generate detailed report: \".concat(error.message));\n        }\n        throw new Error(\"An unknown error occurred while generating the report.\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/geminiService.ts\n"));

/***/ })

});