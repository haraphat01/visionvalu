"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./lib/supabase/middleware.ts":
/*!************************************!*\
  !*** ./lib/supabase/middleware.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateSession: () => (/* binding */ updateSession)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function updateSession(request) {\n    let supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n        request\n    });\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {\n        cookies: {\n            getAll () {\n                return request.cookies.getAll();\n            },\n            setAll (cookiesToSet) {\n                cookiesToSet.forEach(({ name, value })=>request.cookies.set(name, value));\n                supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n                    request\n                });\n                cookiesToSet.forEach(({ name, value, options })=>supabaseResponse.cookies.set(name, value, options));\n            }\n        }\n    });\n    // IMPORTANT: Avoid writing any logic between createServerClient and\n    // supabase.auth.getUser(). A simple mistake could make it very hard to debug\n    // issues with users being randomly logged out.\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user && !request.nextUrl.pathname.startsWith(\"/login\") && !request.nextUrl.pathname.startsWith(\"/signup\") && !request.nextUrl.pathname.startsWith(\"/auth\") && request.nextUrl.pathname !== \"/\") {\n        // no user, potentially respond by redirecting the user to the login page\n        const url = request.nextUrl.clone();\n        url.pathname = \"/login\";\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n    }\n    // IMPORTANT: You *must* return the supabaseResponse object as it is. If you're\n    // creating a new response object with NextResponse.next() make sure to:\n    // 1. Pass the request in it, like so:\n    //    const myNewResponse = NextResponse.next({ request })\n    // 2. Copy over the cookies, like so:\n    //    myNewResponse.cookies.setAll(supabaseResponse.cookies.getAll())\n    // 3. Change the myNewResponse object to fit your needs, but avoid changing\n    //    the cookies!\n    // 4. Finally:\n    //    return myNewResponse\n    // If this is not done, you may be causing the browser and server to go out\n    // of sync and terminate the user's session prematurely.\n    return supabaseResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbGliL3N1cGFiYXNlL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ1U7QUFFckQsZUFBZUUsY0FBY0MsT0FBb0I7SUFDdEQsSUFBSUMsbUJBQW1CSCxxREFBWUEsQ0FBQ0ksSUFBSSxDQUFDO1FBQ3ZDRjtJQUNGO0lBRUEsTUFBTUcsV0FBV04saUVBQWtCQSxDQUNqQ08sUUFBUUMsR0FBRyxDQUFDQyx3QkFBd0IsRUFDcENGLFFBQVFDLEdBQUcsQ0FBQ0UsNkJBQTZCLEVBQ3pDO1FBQ0VDLFNBQVM7WUFDUEM7Z0JBQ0UsT0FBT1QsUUFBUVEsT0FBTyxDQUFDQyxNQUFNO1lBQy9CO1lBQ0FDLFFBQU9DLFlBQVk7Z0JBQ2pCQSxhQUFhQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFLZCxRQUFRUSxPQUFPLENBQUNPLEdBQUcsQ0FBQ0YsTUFBTUM7Z0JBQ3BFYixtQkFBbUJILHFEQUFZQSxDQUFDSSxJQUFJLENBQUM7b0JBQ25DRjtnQkFDRjtnQkFDQVcsYUFBYUMsT0FBTyxDQUFDLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUVFLE9BQU8sRUFBRSxHQUM1Q2YsaUJBQWlCTyxPQUFPLENBQUNPLEdBQUcsQ0FBQ0YsTUFBTUMsT0FBT0U7WUFFOUM7UUFDRjtJQUNGO0lBR0Ysb0VBQW9FO0lBQ3BFLDZFQUE2RTtJQUM3RSwrQ0FBK0M7SUFFL0MsTUFBTSxFQUNKQyxNQUFNLEVBQUVDLElBQUksRUFBRSxFQUNmLEdBQUcsTUFBTWYsU0FBU2dCLElBQUksQ0FBQ0MsT0FBTztJQUUvQixJQUNFLENBQUNGLFFBQ0QsQ0FBQ2xCLFFBQVFxQixPQUFPLENBQUNDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLGFBQ3JDLENBQUN2QixRQUFRcUIsT0FBTyxDQUFDQyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxjQUNyQyxDQUFDdkIsUUFBUXFCLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDQyxVQUFVLENBQUMsWUFDckN2QixRQUFRcUIsT0FBTyxDQUFDQyxRQUFRLEtBQUssS0FDN0I7UUFDQSx5RUFBeUU7UUFDekUsTUFBTUUsTUFBTXhCLFFBQVFxQixPQUFPLENBQUNJLEtBQUs7UUFDakNELElBQUlGLFFBQVEsR0FBRztRQUNmLE9BQU94QixxREFBWUEsQ0FBQzRCLFFBQVEsQ0FBQ0Y7SUFDL0I7SUFFQSwrRUFBK0U7SUFDL0Usd0VBQXdFO0lBQ3hFLHNDQUFzQztJQUN0QywwREFBMEQ7SUFDMUQscUNBQXFDO0lBQ3JDLHFFQUFxRTtJQUNyRSwyRUFBMkU7SUFDM0Usa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCwwQkFBMEI7SUFDMUIsMkVBQTJFO0lBQzNFLHdEQUF3RDtJQUV4RCxPQUFPdkI7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvc3VwYWJhc2UvbWlkZGxld2FyZS50cz9kOTBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UsIHR5cGUgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcidcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVNlc3Npb24ocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgbGV0IHN1cGFiYXNlUmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7XG4gICAgcmVxdWVzdCxcbiAgfSlcblxuICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZVNlcnZlckNsaWVudChcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZISxcbiAgICB7XG4gICAgICBjb29raWVzOiB7XG4gICAgICAgIGdldEFsbCgpIHtcbiAgICAgICAgICByZXR1cm4gcmVxdWVzdC5jb29raWVzLmdldEFsbCgpXG4gICAgICAgIH0sXG4gICAgICAgIHNldEFsbChjb29raWVzVG9TZXQpIHtcbiAgICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSB9KSA9PiByZXF1ZXN0LmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlKSlcbiAgICAgICAgICBzdXBhYmFzZVJlc3BvbnNlID0gTmV4dFJlc3BvbnNlLm5leHQoe1xuICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICB9KVxuICAgICAgICAgIGNvb2tpZXNUb1NldC5mb3JFYWNoKCh7IG5hbWUsIHZhbHVlLCBvcHRpb25zIH0pID0+XG4gICAgICAgICAgICBzdXBhYmFzZVJlc3BvbnNlLmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlLCBvcHRpb25zKVxuICAgICAgICAgIClcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfVxuICApXG5cbiAgLy8gSU1QT1JUQU5UOiBBdm9pZCB3cml0aW5nIGFueSBsb2dpYyBiZXR3ZWVuIGNyZWF0ZVNlcnZlckNsaWVudCBhbmRcbiAgLy8gc3VwYWJhc2UuYXV0aC5nZXRVc2VyKCkuIEEgc2ltcGxlIG1pc3Rha2UgY291bGQgbWFrZSBpdCB2ZXJ5IGhhcmQgdG8gZGVidWdcbiAgLy8gaXNzdWVzIHdpdGggdXNlcnMgYmVpbmcgcmFuZG9tbHkgbG9nZ2VkIG91dC5cblxuICBjb25zdCB7XG4gICAgZGF0YTogeyB1c2VyIH0sXG4gIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFVzZXIoKVxuXG4gIGlmIChcbiAgICAhdXNlciAmJlxuICAgICFyZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUuc3RhcnRzV2l0aCgnL2xvZ2luJykgJiZcbiAgICAhcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9zaWdudXAnKSAmJlxuICAgICFyZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUuc3RhcnRzV2l0aCgnL2F1dGgnKSAmJlxuICAgIHJlcXVlc3QubmV4dFVybC5wYXRobmFtZSAhPT0gJy8nXG4gICkge1xuICAgIC8vIG5vIHVzZXIsIHBvdGVudGlhbGx5IHJlc3BvbmQgYnkgcmVkaXJlY3RpbmcgdGhlIHVzZXIgdG8gdGhlIGxvZ2luIHBhZ2VcbiAgICBjb25zdCB1cmwgPSByZXF1ZXN0Lm5leHRVcmwuY2xvbmUoKVxuICAgIHVybC5wYXRobmFtZSA9ICcvbG9naW4nXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpXG4gIH1cblxuICAvLyBJTVBPUlRBTlQ6IFlvdSAqbXVzdCogcmV0dXJuIHRoZSBzdXBhYmFzZVJlc3BvbnNlIG9iamVjdCBhcyBpdCBpcy4gSWYgeW91J3JlXG4gIC8vIGNyZWF0aW5nIGEgbmV3IHJlc3BvbnNlIG9iamVjdCB3aXRoIE5leHRSZXNwb25zZS5uZXh0KCkgbWFrZSBzdXJlIHRvOlxuICAvLyAxLiBQYXNzIHRoZSByZXF1ZXN0IGluIGl0LCBsaWtlIHNvOlxuICAvLyAgICBjb25zdCBteU5ld1Jlc3BvbnNlID0gTmV4dFJlc3BvbnNlLm5leHQoeyByZXF1ZXN0IH0pXG4gIC8vIDIuIENvcHkgb3ZlciB0aGUgY29va2llcywgbGlrZSBzbzpcbiAgLy8gICAgbXlOZXdSZXNwb25zZS5jb29raWVzLnNldEFsbChzdXBhYmFzZVJlc3BvbnNlLmNvb2tpZXMuZ2V0QWxsKCkpXG4gIC8vIDMuIENoYW5nZSB0aGUgbXlOZXdSZXNwb25zZSBvYmplY3QgdG8gZml0IHlvdXIgbmVlZHMsIGJ1dCBhdm9pZCBjaGFuZ2luZ1xuICAvLyAgICB0aGUgY29va2llcyFcbiAgLy8gNC4gRmluYWxseTpcbiAgLy8gICAgcmV0dXJuIG15TmV3UmVzcG9uc2VcbiAgLy8gSWYgdGhpcyBpcyBub3QgZG9uZSwgeW91IG1heSBiZSBjYXVzaW5nIHRoZSBicm93c2VyIGFuZCBzZXJ2ZXIgdG8gZ28gb3V0XG4gIC8vIG9mIHN5bmMgYW5kIHRlcm1pbmF0ZSB0aGUgdXNlcidzIHNlc3Npb24gcHJlbWF0dXJlbHkuXG5cbiAgcmV0dXJuIHN1cGFiYXNlUmVzcG9uc2Vcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJDbGllbnQiLCJOZXh0UmVzcG9uc2UiLCJ1cGRhdGVTZXNzaW9uIiwicmVxdWVzdCIsInN1cGFiYXNlUmVzcG9uc2UiLCJuZXh0Iiwic3VwYWJhc2UiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJjb29raWVzIiwiZ2V0QWxsIiwic2V0QWxsIiwiY29va2llc1RvU2V0IiwiZm9yRWFjaCIsIm5hbWUiLCJ2YWx1ZSIsInNldCIsIm9wdGlvbnMiLCJkYXRhIiwidXNlciIsImF1dGgiLCJnZXRVc2VyIiwibmV4dFVybCIsInBhdGhuYW1lIiwic3RhcnRzV2l0aCIsInVybCIsImNsb25lIiwicmVkaXJlY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./lib/supabase/middleware.ts\n");

/***/ })

});