"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./lib/supabase/middleware.ts":
/*!************************************!*\
  !*** ./lib/supabase/middleware.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateSession: () => (/* binding */ updateSession)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function updateSession(request) {\n    let supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n        request\n    });\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://bbbengshbvpqxtzrphov.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJiYmVuZ3NoYnZwcXh0enJwaG92Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjEzNzcxNjYsImV4cCI6MjA3Njk1MzE2Nn0.CkmmMBMjbQlJgsgMjRLGfjE6fO-BXiis8nZflT16VX8\", {\n        cookies: {\n            getAll () {\n                return request.cookies.getAll();\n            },\n            setAll (cookiesToSet) {\n                cookiesToSet.forEach(({ name, value })=>request.cookies.set(name, value));\n                supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n                    request\n                });\n                cookiesToSet.forEach(({ name, value, options })=>supabaseResponse.cookies.set(name, value, options));\n            }\n        }\n    });\n    // IMPORTANT: Avoid writing any logic between createServerClient and\n    // supabase.auth.getUser(). A simple mistake could make it very hard to debug\n    // issues with users being randomly logged out.\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user && !request.nextUrl.pathname.startsWith(\"/login\") && !request.nextUrl.pathname.startsWith(\"/signup\") && !request.nextUrl.pathname.startsWith(\"/auth\") && request.nextUrl.pathname !== \"/\") {\n        // no user, potentially respond by redirecting the user to the login page\n        const url = request.nextUrl.clone();\n        url.pathname = \"/login\";\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(url);\n    }\n    // IMPORTANT: You *must* return the supabaseResponse object as it is. If you're\n    // creating a new response object with NextResponse.next() make sure to:\n    // 1. Pass the request in it, like so:\n    //    const myNewResponse = NextResponse.next({ request })\n    // 2. Copy over the cookies, like so:\n    //    myNewResponse.cookies.setAll(supabaseResponse.cookies.getAll())\n    // 3. Change the myNewResponse object to fit your needs, but avoid changing\n    //    the cookies!\n    // 4. Finally:\n    //    return myNewResponse\n    // If this is not done, you may be causing the browser and server to go out\n    // of sync and terminate the user's session prematurely.\n    return supabaseResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbGliL3N1cGFiYXNlL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ1U7QUFFckQsZUFBZUUsY0FBY0MsT0FBb0I7SUFDdEQsSUFBSUMsbUJBQW1CSCxxREFBWUEsQ0FBQ0ksSUFBSSxDQUFDO1FBQ3ZDRjtJQUNGO0lBRUEsTUFBTUcsV0FBV04saUVBQWtCQSxDQUNqQ08sMENBQW9DLEVBQ3BDQSxrTkFBeUMsRUFDekM7UUFDRUksU0FBUztZQUNQQztnQkFDRSxPQUFPVCxRQUFRUSxPQUFPLENBQUNDLE1BQU07WUFDL0I7WUFDQUMsUUFBT0MsWUFBWTtnQkFDakJBLGFBQWFDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUtkLFFBQVFRLE9BQU8sQ0FBQ08sR0FBRyxDQUFDRixNQUFNQztnQkFDcEViLG1CQUFtQkgscURBQVlBLENBQUNJLElBQUksQ0FBQztvQkFDbkNGO2dCQUNGO2dCQUNBVyxhQUFhQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUUsT0FBTyxFQUFFLEdBQzVDZixpQkFBaUJPLE9BQU8sQ0FBQ08sR0FBRyxDQUFDRixNQUFNQyxPQUFPRTtZQUU5QztRQUNGO0lBQ0Y7SUFHRixvRUFBb0U7SUFDcEUsNkVBQTZFO0lBQzdFLCtDQUErQztJQUUvQyxNQUFNLEVBQ0pDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEVBQ2YsR0FBRyxNQUFNZixTQUFTZ0IsSUFBSSxDQUFDQyxPQUFPO0lBRS9CLElBQ0UsQ0FBQ0YsUUFDRCxDQUFDbEIsUUFBUXFCLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDQyxVQUFVLENBQUMsYUFDckMsQ0FBQ3ZCLFFBQVFxQixPQUFPLENBQUNDLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLGNBQ3JDLENBQUN2QixRQUFRcUIsT0FBTyxDQUFDQyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxZQUNyQ3ZCLFFBQVFxQixPQUFPLENBQUNDLFFBQVEsS0FBSyxLQUM3QjtRQUNBLHlFQUF5RTtRQUN6RSxNQUFNRSxNQUFNeEIsUUFBUXFCLE9BQU8sQ0FBQ0ksS0FBSztRQUNqQ0QsSUFBSUYsUUFBUSxHQUFHO1FBQ2YsT0FBT3hCLHFEQUFZQSxDQUFDNEIsUUFBUSxDQUFDRjtJQUMvQjtJQUVBLCtFQUErRTtJQUMvRSx3RUFBd0U7SUFDeEUsc0NBQXNDO0lBQ3RDLDBEQUEwRDtJQUMxRCxxQ0FBcUM7SUFDckMscUVBQXFFO0lBQ3JFLDJFQUEyRTtJQUMzRSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLDBCQUEwQjtJQUMxQiwyRUFBMkU7SUFDM0Usd0RBQXdEO0lBRXhELE9BQU92QjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9zdXBhYmFzZS9taWRkbGV3YXJlLnRzP2Q5MGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VydmVyQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3NzcidcbmltcG9ydCB7IE5leHRSZXNwb25zZSwgdHlwZSBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlU2Vzc2lvbihyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICBsZXQgc3VwYWJhc2VSZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHtcbiAgICByZXF1ZXN0LFxuICB9KVxuXG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlU2VydmVyQ2xpZW50KFxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhLFxuICAgIHtcbiAgICAgIGNvb2tpZXM6IHtcbiAgICAgICAgZ2V0QWxsKCkge1xuICAgICAgICAgIHJldHVybiByZXF1ZXN0LmNvb2tpZXMuZ2V0QWxsKClcbiAgICAgICAgfSxcbiAgICAgICAgc2V0QWxsKGNvb2tpZXNUb1NldCkge1xuICAgICAgICAgIGNvb2tpZXNUb1NldC5mb3JFYWNoKCh7IG5hbWUsIHZhbHVlIH0pID0+IHJlcXVlc3QuY29va2llcy5zZXQobmFtZSwgdmFsdWUpKVxuICAgICAgICAgIHN1cGFiYXNlUmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7XG4gICAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgIH0pXG4gICAgICAgICAgY29va2llc1RvU2V0LmZvckVhY2goKHsgbmFtZSwgdmFsdWUsIG9wdGlvbnMgfSkgPT5cbiAgICAgICAgICAgIHN1cGFiYXNlUmVzcG9uc2UuY29va2llcy5zZXQobmFtZSwgdmFsdWUsIG9wdGlvbnMpXG4gICAgICAgICAgKVxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9XG4gIClcblxuICAvLyBJTVBPUlRBTlQ6IEF2b2lkIHdyaXRpbmcgYW55IGxvZ2ljIGJldHdlZW4gY3JlYXRlU2VydmVyQ2xpZW50IGFuZFxuICAvLyBzdXBhYmFzZS5hdXRoLmdldFVzZXIoKS4gQSBzaW1wbGUgbWlzdGFrZSBjb3VsZCBtYWtlIGl0IHZlcnkgaGFyZCB0byBkZWJ1Z1xuICAvLyBpc3N1ZXMgd2l0aCB1c2VycyBiZWluZyByYW5kb21seSBsb2dnZWQgb3V0LlxuXG4gIGNvbnN0IHtcbiAgICBkYXRhOiB7IHVzZXIgfSxcbiAgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpXG5cbiAgaWYgKFxuICAgICF1c2VyICYmXG4gICAgIXJlcXVlc3QubmV4dFVybC5wYXRobmFtZS5zdGFydHNXaXRoKCcvbG9naW4nKSAmJlxuICAgICFyZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUuc3RhcnRzV2l0aCgnL3NpZ251cCcpICYmXG4gICAgIXJlcXVlc3QubmV4dFVybC5wYXRobmFtZS5zdGFydHNXaXRoKCcvYXV0aCcpICYmXG4gICAgcmVxdWVzdC5uZXh0VXJsLnBhdGhuYW1lICE9PSAnLydcbiAgKSB7XG4gICAgLy8gbm8gdXNlciwgcG90ZW50aWFsbHkgcmVzcG9uZCBieSByZWRpcmVjdGluZyB0aGUgdXNlciB0byB0aGUgbG9naW4gcGFnZVxuICAgIGNvbnN0IHVybCA9IHJlcXVlc3QubmV4dFVybC5jbG9uZSgpXG4gICAgdXJsLnBhdGhuYW1lID0gJy9sb2dpbidcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybClcbiAgfVxuXG4gIC8vIElNUE9SVEFOVDogWW91ICptdXN0KiByZXR1cm4gdGhlIHN1cGFiYXNlUmVzcG9uc2Ugb2JqZWN0IGFzIGl0IGlzLiBJZiB5b3UncmVcbiAgLy8gY3JlYXRpbmcgYSBuZXcgcmVzcG9uc2Ugb2JqZWN0IHdpdGggTmV4dFJlc3BvbnNlLm5leHQoKSBtYWtlIHN1cmUgdG86XG4gIC8vIDEuIFBhc3MgdGhlIHJlcXVlc3QgaW4gaXQsIGxpa2Ugc286XG4gIC8vICAgIGNvbnN0IG15TmV3UmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7IHJlcXVlc3QgfSlcbiAgLy8gMi4gQ29weSBvdmVyIHRoZSBjb29raWVzLCBsaWtlIHNvOlxuICAvLyAgICBteU5ld1Jlc3BvbnNlLmNvb2tpZXMuc2V0QWxsKHN1cGFiYXNlUmVzcG9uc2UuY29va2llcy5nZXRBbGwoKSlcbiAgLy8gMy4gQ2hhbmdlIHRoZSBteU5ld1Jlc3BvbnNlIG9iamVjdCB0byBmaXQgeW91ciBuZWVkcywgYnV0IGF2b2lkIGNoYW5naW5nXG4gIC8vICAgIHRoZSBjb29raWVzIVxuICAvLyA0LiBGaW5hbGx5OlxuICAvLyAgICByZXR1cm4gbXlOZXdSZXNwb25zZVxuICAvLyBJZiB0aGlzIGlzIG5vdCBkb25lLCB5b3UgbWF5IGJlIGNhdXNpbmcgdGhlIGJyb3dzZXIgYW5kIHNlcnZlciB0byBnbyBvdXRcbiAgLy8gb2Ygc3luYyBhbmQgdGVybWluYXRlIHRoZSB1c2VyJ3Mgc2Vzc2lvbiBwcmVtYXR1cmVseS5cblxuICByZXR1cm4gc3VwYWJhc2VSZXNwb25zZVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZVNlcnZlckNsaWVudCIsIk5leHRSZXNwb25zZSIsInVwZGF0ZVNlc3Npb24iLCJyZXF1ZXN0Iiwic3VwYWJhc2VSZXNwb25zZSIsIm5leHQiLCJzdXBhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImNvb2tpZXMiLCJnZXRBbGwiLCJzZXRBbGwiLCJjb29raWVzVG9TZXQiLCJmb3JFYWNoIiwibmFtZSIsInZhbHVlIiwic2V0Iiwib3B0aW9ucyIsImRhdGEiLCJ1c2VyIiwiYXV0aCIsImdldFVzZXIiLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwidXJsIiwiY2xvbmUiLCJyZWRpcmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./lib/supabase/middleware.ts\n");

/***/ })

});