import { createClient } from '@/lib/supabase/server'
import { NextResponse } from 'next/server'

export async function GET(
  request: Request,
  { params }: { params: { id: string } }
) {
  const supabase = await createClient()
  
  const { data: { user }, error: authError } = await supabase.auth.getUser()
  
  if (authError || !user) {
    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })
  }

  // Get the report
  const { data: report, error: reportError } = await supabase
    .from('reports')
    .select('*')
    .eq('id', params.id)
    .eq('user_id', user.id)
    .single()

  if (reportError || !report) {
    return NextResponse.json({ error: 'Report not found' }, { status: 404 })
  }

  const reportData = report.report_data

  // Generate HTML for PDF
  const html = `
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="UTF-8">
        <title>Property Valuation Report</title>
        <style>
          body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            line-height: 1.6;
            color: #334155;
            max-width: 800px;
            margin: 0 auto;
            padding: 40px 20px;
            background: white;
          }
          .header {
            text-align: center;
            margin-bottom: 40px;
            padding-bottom: 20px;
            border-bottom: 3px solid #3b82f6;
          }
          .header h1 {
            color: #1e293b;
            margin: 0;
            font-size: 28px;
            font-weight: bold;
          }
          .header p {
            color: #64748b;
            margin: 5px 0;
          }
          h2 {
            color: #1e293b;
            font-size: 22px;
            font-weight: 600;
            margin-top: 30px;
            margin-bottom: 15px;
            border-bottom: 2px solid #e2e8f0;
            padding-bottom: 8px;
          }
          h3 {
            color: #334155;
            font-size: 18px;
            font-weight: 600;
            margin-top: 25px;
            margin-bottom: 12px;
          }
          .property-details {
            background-color: #f8fafc;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
          }
          .property-details p {
            margin: 8px 0;
          }
          .valuation-box {
            background: linear-gradient(135deg, #eff6ff 0%, #e0e7ff 100%);
            border: 2px solid #3b82f6;
            border-radius: 12px;
            padding: 30px;
            margin: 30px 0;
            text-align: center;
          }
          .valuation-amount {
            font-size: 36px;
            font-weight: bold;
            color: #3b82f6;
            margin: 10px 0;
          }
          .confidence {
            color: #64748b;
            font-size: 14px;
            margin-top: 10px;
          }
          .analysis {
            margin-top: 30px;
          }
          .analysis p {
            margin-bottom: 15px;
            text-align: justify;
          }
          ul {
            margin: 15px 0;
            padding-left: 25px;
          }
          li {
            margin-bottom: 8px;
          }
          .disclaimer {
            background-color: #f1f5f9;
            border-left: 4px solid #3b82f6;
            padding: 15px;
            margin-top: 40px;
            font-style: italic;
            font-size: 14px;
            color: #475569;
          }
          strong {
            font-weight: 600;
            color: #1e293b;
          }
          @media print {
            body { margin: 0; padding: 20px; }
            .header { page-break-after: avoid; }
            h2 { page-break-after: avoid; }
          }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>üè† Property Valuation Report</h1>
          <p>Generated by HomeWorth AI</p>
          <p style="font-size: 14px;">${new Date(report.created_at).toLocaleDateString('en-US', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}</p>
        </div>

        <div class="property-details">
          <h2>Property Details</h2>
          <p><strong>Address:</strong> ${reportData.propertyDetails?.address || reportData.property_address || 'Not specified'}</p>
          <p><strong>Type:</strong> ${reportData.propertyType || reportData.property_type || 'Not specified'}</p>
          <p><strong>Condition:</strong> ${reportData.propertyCondition || reportData.property_condition || 'Not specified'}</p>
          ${reportData.propertyDetails?.propertySize ? `<p><strong>Size:</strong> ${reportData.propertyDetails.propertySize} sqft</p>` : ''}
        </div>

        <div class="valuation-box">
          <h2>Valuation Estimate</h2>
          ${(reportData.estimatedValueRange || (reportData.estimated_value_min && reportData.estimated_value_max)) ? (
            `<p class="valuation-amount">
              ${reportData.estimatedValueRange 
                ? `$${reportData.estimatedValueRange.min.toLocaleString()} - $${reportData.estimatedValueRange.max.toLocaleString()}`
                : `$${reportData.estimated_value_min?.toLocaleString() || '0'} - $${reportData.estimated_value_max?.toLocaleString() || '0'}`
              }
            </p>`
          ) : (
            '<p class="valuation-amount" style="color: #64748b;">Value not available</p>'
          )}
          <p class="confidence">Confidence: ${reportData.confidenceScore || reportData.confidence_score || 0}%</p>
        </div>

        ${reportData.detailed_report ? (
          `<div class="analysis">
            <h2>Detailed Analysis</h2>
            <div>${reportData.detailed_report
              .replace(/\n\n/g, '</p><p>')
              .replace(/\n/g, '<br>')
              .replace(/## (.*?)(<br>|$)/g, '<h3>$1</h3>')
              .replace(/### (.*?)(<br>|$)/g, '<h4 style="font-size: 16px; font-weight: 600; margin-top: 15px; margin-bottom: 8px;">$1</h4>')
              .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
              .replace(/\*(.*?)\*/g, '<em>$1</em>')
              .replace(/- (.*?)(<br>|$)/g, '<li>$1</li>')
            }</div>
          </div>`
        ) : (
          reportData.reasoning ? (
            `<div class="analysis">
              <h2>AI Analysis</h2>
              <p>${reportData.reasoning.replace(/\n/g, '<br>')}</p>
            </div>`
          ) : ''
        )}

        ${reportData.detectedFeatures && reportData.detectedFeatures.length > 0 ? (
          `<div>
            <h2>Detected Features</h2>
            <ul>
              ${reportData.detectedFeatures.map((feature: string) => `<li>${feature}</li>`).join('')}
            </ul>
          </div>`
        ) : ''}

        <div class="disclaimer">
          <strong>Disclaimer:</strong> This is an AI-generated property valuation estimate. 
          For final decisions, we recommend consulting with a professional real estate appraiser 
          or conducting a comprehensive market analysis.
        </div>
      </body>
    </html>
  `

  return new NextResponse(html, {
    headers: {
      'Content-Type': 'text/html',
      'Content-Disposition': `inline; filename="property-valuation-${params.id}.html"`,
    },
  })
}

